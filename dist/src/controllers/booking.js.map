{"version":3,"file":"booking.js","sourceRoot":"","sources":["../../../src/controllers/booking.ts"],"names":[],"mappings":";;;;;;;;;;AACA,gDAAgD;AAEnC,QAAA,MAAM,GAAG,CAAO,GAAY,EAAE,IAAgB,EAAE,EAAE;IAC3D,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,QAAQ,CAAC,MAAM,EAAE,CAAC;IACzC,MAAM,IAAI,EAAE,CAAC;AACjB,CAAC,CAAA,CAAC;AAEW,QAAA,cAAc,GAAG,CAAO,GAAY,EAAE,IAAgB,EAAE,EAAE;IACnE,MAAM,EAAE,GAAW,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IACjC,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC5C,MAAM,IAAI,EAAE,CAAC;AACjB,CAAC,CAAA,CAAC;AAEW,QAAA,QAAQ,GAAG,CAAO,GAAY,EAAE,IAAgB,EAAE,EAAE;IAC7D,MAAM,OAAO,GAAG;QACZ,OAAO,EAAE,CAAC;QACV,KAAK,EAAE,CAAC;QACR,WAAW,EAAE,IAAI,IAAI,EAAE;QACvB,UAAU,EAAE,IAAI,IAAI,EAAE;QACtB,WAAW,EAAE,IAAI,IAAI,EAAE;QACvB,WAAW,EAAE,IAAI,IAAI,EAAE;QACvB,oBAAoB,EAAE,IAAI,IAAI,EAAE;QAChC,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAChC,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;KACpC,CAAC;IACF,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClD,MAAM,IAAI,EAAE,CAAC;AACjB,CAAC,CAAA,CAAC;AAEW,QAAA,aAAa,GAAG,CAAO,GAAY,EAAE,IAAgB,EAAE,EAAE;IAClE,MAAM,EAAE,GAAW,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;IACjC,GAAG,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IAC/C,MAAM,IAAI,EAAE,CAAC;AACjB,CAAC,CAAA,CAAC","sourcesContent":["import { Context } from 'koa';\nimport * as services from '../services/booking';\n\nexport const getAll = async (ctx: Context, next: () => void) => {\n    ctx.state.data = await services.getAll();\n    await next();\n};\n\nexport const bookingDetails = async (ctx: Context, next: () => void) => {\n    const id: number = ctx.params.id;\n    ctx.state.data = await services.getById(id);\n    await next();\n};\n\nexport const bookRide = async (ctx: Context, next: () => void) => {\n    const booking = {\n        riderId: 0,\n        busId: 0,\n        bookingTime: new Date(),\n        pickupTime: new Date(),\n        dropOffTime: new Date(),\n        arrivalTime: new Date(),\n        estimatedDropOffTime: new Date(),\n        pickupLocation: JSON.parse(\"{}\"),\n        dropOffLocation: JSON.parse(\"{}\"),\n    };\n    ctx.state.data = await services.bookRide(booking);\n    await next();\n};\n\nexport const cancelBooking = async (ctx: Context, next: () => void) => {\n    const id: number = ctx.params.id;\n    ctx.state.data = await services.softDelete(id);\n    await next();\n};\n"]}