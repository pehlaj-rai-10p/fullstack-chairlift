{"version":3,"file":"booking.js","sourceRoot":"","sources":["../../../src/services/booking.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,6BAA6B;AAC7B,2BAA2B;AAC3B,gDAAgD;AAChD,iDAA8C;AAGjC,QAAA,MAAM,GAAG,GAAS,EAAE;IAC7B,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;AACzB,CAAC,CAAA,CAAC;AAEW,QAAA,OAAO,GAAG,CAAO,EAAU,EAAE,EAAE;IACxC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IACtC,IAAI,CAAC,MAAM,EAAE;QACT,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;KACjC;IACD,OAAO,MAAM,CAAC;AAClB,CAAC,CAAA,CAAC;AAEW,QAAA,QAAQ,GAAG,CAAO,OAAwB,EAAE,EAAE;IACvD,MAAM,GAAG,CAAC,QAAQ,CAAC,OAAO,EAAE;QACxB,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;KAChC,CAAC,CAAC;IACH,MAAM,OAAO,GAAG,IAAI,iBAAO,EAAE,CAAC;IAE9B,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC1C,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAA,CAAC;AAEW,QAAA,UAAU,GAAG,CAAO,EAAU,EAAE,EAAE;IAC3C,MAAM,MAAM,GAAG,MAAM,eAAO,CAAC,EAAE,CAAC,CAAC;IACjC,MAAM,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IAC3C,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAC7B,CAAC,CAAA,CAAC;AAEW,QAAA,UAAU,GAAG,CAAO,EAAU,EAAE,EAAE;IAC3C,MAAM,MAAM,GAAG,MAAM,eAAO,CAAC,EAAE,CAAC,CAAC;IACjC,MAAM,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;IAC1B,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAC7B,CAAC,CAAA,CAAC","sourcesContent":["import * as boom from 'boom';\nimport * as joi from 'joi';\nimport * as repo from '../repositories/booking';\nimport { Booking } from '../entities/booking';\nimport { IBookingRequest, IBookingCancelRequest } from '../interfaces/booking';\n\nexport const getAll = async () => {\n    return repo.getAll();\n};\n\nexport const getById = async (id: number) => {\n    const result = await repo.getById(id);\n    if (!result) {\n        boom.badRequest('Invalid id');\n    }\n    return result;\n};\n\nexport const bookRide = async (payload: IBookingRequest) => {\n    await joi.validate(payload, {\n        name: joi.string().required()\n    });\n    const booking = new Booking();\n    //TODO populate fields here\n    const result = await repo.insert(booking);\n    return result[0];\n};\n\nexport const softDelete = async (id: number) => {\n    const result = await getById(id);\n    await repo.update(id, { isDeleted: true });\n    return { success: true };\n};\n\nexport const hardDelete = async (id: number) => {\n    const result = await getById(id);\n    await repo.hardDelete(id);\n    return { success: true };\n};\n"]}